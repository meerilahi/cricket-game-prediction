{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1dWG7977S33GefYF_SLEUcHQ3hyiQgCLo","timestamp":1744145218543},{"file_id":"1pfvzwrby0U61mLLTv3gNzvpKySRtnW2L","timestamp":1744123219894}],"authorship_tag":"ABX9TyPWFGtlv/LOPqHezNP4cNiN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.decomposition import PCA\n","from sklearn.metrics import (\n","    accuracy_score, precision_score, recall_score, f1_score,\n","    classification_report, confusion_matrix, ConfusionMatrixDisplay,\n","    roc_auc_score, roc_curve, auc, precision_recall_curve)\n","from sklearn.ensemble import RandomForestClassifier\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import kagglehub"],"metadata":{"id":"XqhH5ivOSCgG","executionInfo":{"status":"ok","timestamp":1744222466577,"user_tz":-300,"elapsed":5947,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WWlOkGGxKhmU","executionInfo":{"status":"ok","timestamp":1744222473623,"user_tz":-300,"elapsed":7019,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}},"outputId":"1a291a6c-c7d1-49ca-ad18-7ae87ba51b54"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/patrickb1912/ipl-complete-dataset-20082020?dataset_version_number=3...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 1.82M/1.82M [00:00<00:00, 50.5MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["Path to dataset files: /root/.cache/kagglehub/datasets/patrickb1912/ipl-complete-dataset-20082020/versions/3\n","/root/.cache/kagglehub/datasets/patrickb1912/ipl-complete-dataset-20082020/versions/3\n","deliveries.csv\tmatches.csv\n"]}],"source":["path = kagglehub.dataset_download(\"patrickb1912/ipl-complete-dataset-20082020\")\n","print(\"Path to dataset files:\", path)\n","%cd /root/.cache/kagglehub/datasets/patrickb1912/ipl-complete-dataset-20082020/versions/3\n","!ls"]},{"cell_type":"code","source":["matches = pd.read_csv(\"matches.csv\", usecols=[ 'team1', 'team2', 'winner', 'venue', 'toss_winner', 'toss_decision'])\n","\n","matches = matches.replace({\"Royal Challengers Bangalore\" : \"Royal Challengers Bengaluru\", \"Rising Pune Supergiants\": \"Rising Pune Supergiant\"})\n","\n","def standardize_venue(venue):\n","    venue = venue.replace(\", Mumbai\", \"\").replace(\", Delhi\", \"\").replace(\", Bengaluru\", \"\").replace(\", Pune\",\"\")\n","    venue = venue.replace(\", Chepauk\", \"\").replace(\", Lucknow\", \"\").replace(\", Jaipur\", \"\").replace(\", Uppal\",\"\")\n","    venue = venue.replace(\", Ahmedabad\", \"\").replace(\", Hyderabad\", \"\").replace(\", Visakhapatnam\", \"\").replace(\", Mullanpur\",\"\")\n","    venue = venue.replace(\", Dharamsala\", \"\").replace(\", Chandigarh\", \"\").replace(\", Kolkata\", \"\").replace(\", Jamtha\",\"\").replace(\", Chennai\",\"\")\n","    venue = venue.replace(\", Abu Dhabi\", \"\").replace(\", Guwahati\", \"\").replace(\"M Chinnaswamy Stadium\", \"M Chinnaswamy Stadium\")\n","    venue = venue.replace(\"Dr DY Patil Sports Academy\", \"Dr. DY Patil Sports Academy\").replace(\", Mohali\",\"\").replace(\", Ranchi\",\"\")\n","    venue = venue.replace(\"M.Chinnaswamy Stadium\", \"M Chinnaswamy Stadium\")\n","    return venue.strip()\n","\n","def orderfeatures(row):\n","    row = row.copy()\n","    if row['team1'] > row['team2']:\n","        row['team1'], row['team2'] = row['team2'], row['team1']\n","    return row\n","\n","matches['venue'] = matches['venue'].apply(standardize_venue)\n","matches = matches.apply(orderfeatures, axis = 1)\n","matches['toss_winner'] = (matches['toss_winner'] == matches['team1']).astype(int)\n","matches['toss_decision'] = (matches['toss_decision'] == 'field').astype(int)\n","matches['winner'] = (matches['winner'] == matches['team1']).astype(int)\n","matches = matches.iloc[:,::-1]"],"metadata":{"id":"2-9e42OP6SIE","executionInfo":{"status":"ok","timestamp":1744223011975,"user_tz":-300,"elapsed":580,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["matches_encoded = pd.get_dummies(matches, columns=['team1', 'team2', 'venue']).astype(int)\n","matches_encoded.drop(['team1_Royal Challengers Bengaluru', 'team2_Sunrisers Hyderabad', 'venue_Zayed Cricket Stadium'], axis=1, inplace=True)"],"metadata":{"id":"kjccKqBR_1lJ","executionInfo":{"status":"ok","timestamp":1744223014227,"user_tz":-300,"elapsed":186,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["X = matches_encoded.iloc[:,1:]\n","y = matches_encoded.iloc[:,0]\n","SPLIT_INDEX = int(len(X) * 0.90)\n","X_train, X_test = X[:SPLIT_INDEX], X[SPLIT_INDEX:]\n","y_train, y_test = y[:SPLIT_INDEX], y[SPLIT_INDEX:]"],"metadata":{"id":"Bjrc4FAyYWoK","executionInfo":{"status":"ok","timestamp":1744223015841,"user_tz":-300,"elapsed":194,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["pca = PCA(n_components=0.7)\n","X_train_pca = pca.fit_transform(X_train)\n","X_test_pca = pca.transform(X_test)\n","\n","\n","rf_model = RandomForestClassifier(\n","    n_estimators=200,\n","    max_depth=None,\n","    # class_weight='balanced',\n","    random_state=42,\n","    n_jobs=-1\n",")\n","rf_model.fit(X_train_pca, y_train)\n","y_pred = rf_model.predict(X_test_pca)\n","y_proba = rf_model.predict_proba(X_test_pca)[:, 1]\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy * 100:.2f}%')\n","print(\"\\nClassification Report:\")\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mXm7J7RO7-ST","executionInfo":{"status":"ok","timestamp":1744223022852,"user_tz":-300,"elapsed":1794,"user":{"displayName":"Taimoor Ul Islam","userId":"11174698859917511060"}},"outputId":"6b6046f8-51dc-4266-e583-9318ab6680e9"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 54.55%\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.48      0.48      0.48        48\n","           1       0.60      0.60      0.60        62\n","\n","    accuracy                           0.55       110\n","   macro avg       0.54      0.54      0.54       110\n","weighted avg       0.55      0.55      0.55       110\n","\n"]}]}]}